You are an expert Python developer generating ONE calculation function for a research framework.

**CALCULATION TO IMPLEMENT:**
Name: identity_tension
Description: Conflict between tribal dominance and individual dignity dimensions. Formula: identity_tension = TD_score + ID_score - (TD_score * ID_score) where TD_score is the mean 'Tribal Dominance' score and ID_score is the mean 'Individual Dignity' score derived from the input DataFrame.

**ACTUAL DATA STRUCTURE:**
The analysis data contains the following columns:
- document_name (string)
- tribal_dominance (float 0.0-1.0) ← REAL DATA IS HERE
- tribal_dominance_salience (float)
- tribal_dominance_confidence (float)  
- individual_dignity (float 0.0-1.0) ← REAL DATA IS HERE
- individual_dignity_salience (float)
- individual_dignity_confidence (float)
- fear (float 0.0-1.0)
- hope (float 0.0-1.0)
- envy (float 0.0-1.0)
- compassion (float 0.0-1.0)
- enmity (float 0.0-1.0)
- amity (float 0.0-1.0)
- fragmentative_goals (float 0.0-1.0)
- cohesive_goals (float 0.0-1.0)
- Tribal Dominance (float - ALWAYS NaN, ignore)
- Individual Dignity (float - ALWAYS NaN, ignore)

**SAMPLE DATA:**
Row 1: tribal_dominance=0.1, individual_dignity=0.9 → Expected result: 0.1 + 0.9 - (0.1 * 0.9) = 0.91
Row 2: tribal_dominance=0.05, individual_dignity=0.9 → Expected result: 0.05 + 0.9 - (0.05 * 0.9) = 0.905  
Row 3: tribal_dominance=0.9, individual_dignity=0.1 → Expected result: 0.9 + 0.1 - (0.9 * 0.1) = 0.91

**REQUIREMENTS:**
1. Generate EXACTLY ONE Python function
2. Function name: calculate_identity_tension
3. Accept pandas DataFrame 'data' as primary parameter
4. Use the EXACT column names: 'tribal_dominance' and 'individual_dignity' (lowercase with underscores)
5. IGNORE the Title Case columns ('Tribal Dominance', 'Individual Dignity') - they contain NaN
6. Handle missing data gracefully (return None)
7. Apply the function per ROW (not across entire dataset)
8. Include proper docstring with formula

**CRITICAL OUTPUT FORMAT - YOU MUST FOLLOW THIS EXACTLY:**
You MUST start your response with the opening delimiter and end with the closing delimiter.
Do NOT include any other text before or after the delimiters.

<<<DISCERNUS_FUNCTION_START>>>
def calculate_identity_tension(data, **kwargs):
    """
    Calculate identity_tension: [your description here]
    
    Args:
        data: pandas DataFrame row with dimension scores
        **kwargs: Additional parameters
        
    Returns:
        float: Calculated result or None if insufficient data
    """
    import pandas as pd
    import numpy as np
    
    try:
        # Implementation using 'tribal_dominance' and 'individual_dignity' columns
        # YOUR CODE HERE
        pass
    except Exception:
        return None
<<<DISCERNUS_FUNCTION_END>>>

**MANDATORY RULES:**
- Use EXACT column names: 'tribal_dominance' and 'individual_dignity'
- Your response MUST begin with: <<<DISCERNUS_FUNCTION_START>>>
- Your response MUST end with: <<<DISCERNUS_FUNCTION_END>>>
- Generate ONLY this one function. Do not generate multiple functions.