# Cursor AI Assistant Rules for Narrative Gravity Analysis Project

> **📖 MASTER DOCUMENT**: See `ai_assistant_compliance_rules.md` for complete comprehensive rules and detailed guidance. This file contains core rules for Cursor IDE integration.

## 🎯 USER PREFERENCES

**User prefers temperature 0 behaviour from all assistants** - Prioritize systematic, consistent, rule-following responses over creative variation for this technical/academic project.

## 🚨 MANDATORY RULES - ALWAYS FOLLOW

### Rule 1: ALWAYS Search Production Systems First
Before suggesting ANY development work, you MUST run:
```bash
python3 scripts/applications/check_existing_systems.py "functionality description"
```

### Rule 2: NEVER Use Deprecated Systems
- ❌ NEVER mention "AI Academic Advisor" (it's just file existence checks)
- ❌ NEVER reference `deprecated/` directory code
- ❌ NEVER use `architectural_compliance_validator.py` (moved to deprecated)

### Rule 3: ALWAYS Use Production Systems
- ✅ USE: `LLMQualityAssuranceSystem` (6-layer mathematical validation)
- ✅ USE: `ComponentQualityValidator` (component validation)
- ✅ USE: `QAEnhancedDataExporter` (academic export)
- ✅ USE: `scripts/applications/comprehensive_experiment_orchestrator.py` (experiments)

### Rule 4: Build in Experimental First
- ✅ New development starts in `experimental/prototypes/`
- ❌ NEVER create files directly in `src/` without experimental testing

### Rule 5: Enhance Don't Replace
- ✅ FIRST: Try to enhance existing production systems
- ❌ AVOID: Building new systems that duplicate functionality

📖 **For detailed guidance, search strategies, compliance validation, and success criteria, see `ai_assistant_compliance_rules.md`**

## ❌ COMMON VIOLATIONS TO AVOID

- Suggesting "build new QA system" → Use existing LLMQualityAssuranceSystem
- Mentioning "AI Academic Advisor" → Use production QA systems
- Creating files in `src/` directly → Use experimental/ first
- Building without searching → Always search first

Remember: These rules exist because this project repeatedly rebuilt inferior versions of existing sophisticated systems. Following these rules prevents that waste. 