"""Create initial schema

Revision ID: d3dd30425826
Revises: 
Create Date: 2025-06-20 22:41:50.058131

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd3dd30425826'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('organization', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('api_key_hash', sa.String(length=255), nullable=True),
    sa.Column('rate_limit_quota', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('corpus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('upload_timestamp', sa.DateTime(), nullable=True),
    sa.Column('record_count', sa.Integer(), nullable=True),
    sa.Column('uploader_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['uploader_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_corpus_id'), 'corpus', ['id'], unique=False)
    op.create_table('development_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_name', sa.String(length=255), nullable=False),
    sa.Column('component_type', sa.String(length=50), nullable=False),
    sa.Column('component_name', sa.String(length=100), nullable=False),
    sa.Column('hypothesis', sa.Text(), nullable=True),
    sa.Column('base_version', sa.String(length=20), nullable=True),
    sa.Column('target_version', sa.String(length=20), nullable=True),
    sa.Column('researcher', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('iteration_log', sa.JSON(), nullable=False),
    sa.Column('test_results', sa.JSON(), nullable=False),
    sa.Column('success_metrics', sa.JSON(), nullable=False),
    sa.Column('created_version_id', sa.String(length=36), nullable=True),
    sa.Column('lessons_learned', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['researcher'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('hypothesis', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('research_context', sa.Text(), nullable=True),
    sa.Column('prompt_template_id', sa.String(length=100), nullable=False),
    sa.Column('framework_config_id', sa.String(length=100), nullable=False),
    sa.Column('scoring_algorithm_id', sa.String(length=100), nullable=False),
    sa.Column('analysis_mode', sa.String(length=50), nullable=True),
    sa.Column('selected_models', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_runs', sa.Integer(), nullable=True),
    sa.Column('successful_runs', sa.Integer(), nullable=True),
    sa.Column('research_notes', sa.Text(), nullable=True),
    sa.Column('publication_status', sa.String(length=50), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_experiment_id'), 'experiment', ['id'], unique=False)
    op.create_table('framework_versions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('framework_name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('dipoles_json', sa.JSON(), nullable=False),
    sa.Column('framework_json', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weights_json', sa.JSON(), nullable=False),
    sa.Column('weighting_rationale', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parent_version_id', sa.String(length=36), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('average_coherence', sa.Float(), nullable=True),
    sa.Column('framework_fit_average', sa.Float(), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('theoretical_foundation', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['framework_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('framework_name', 'version', name='_framework_name_version_uc')
    )
    op.create_table('prompt_templates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('template_content', sa.Text(), nullable=False),
    sa.Column('template_type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parent_version_id', sa.String(length=36), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('average_cost', sa.Float(), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['prompt_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', name='_prompt_name_version_uc')
    )
    op.create_table('weighting_methodologies',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('algorithm_description', sa.Text(), nullable=False),
    sa.Column('mathematical_formula', sa.Text(), nullable=True),
    sa.Column('implementation_notes', sa.Text(), nullable=True),
    sa.Column('algorithm_type', sa.String(length=50), nullable=False),
    sa.Column('parameters_json', sa.JSON(), nullable=False),
    sa.Column('default_weights', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parent_version_id', sa.String(length=36), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('average_polarity', sa.Float(), nullable=True),
    sa.Column('average_elevation', sa.Float(), nullable=True),
    sa.Column('stability_coefficient', sa.Float(), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('mathematical_validation', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['weighting_methodologies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', name='_weighting_name_version_uc')
    )
    op.create_table('component_compatibility',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('prompt_template_id', sa.String(length=36), nullable=False),
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.Column('weighting_method_id', sa.String(length=36), nullable=False),
    sa.Column('compatibility_score', sa.Float(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('average_coherence', sa.Float(), nullable=True),
    sa.Column('average_framework_fit', sa.Float(), nullable=True),
    sa.Column('cross_run_stability', sa.Float(), nullable=True),
    sa.Column('test_run_count', sa.Integer(), nullable=True),
    sa.Column('successful_runs', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('validated_at', sa.DateTime(), nullable=True),
    sa.Column('validated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['framework_id'], ['framework_versions.id'], ),
    sa.ForeignKeyConstraint(['prompt_template_id'], ['prompt_templates.id'], ),
    sa.ForeignKeyConstraint(['validated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weighting_method_id'], ['weighting_methodologies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prompt_template_id', 'framework_id', 'weighting_method_id', name='_component_combination_uc')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('corpus_id', sa.Integer(), nullable=False),
    sa.Column('text_id', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('publication', sa.String(length=255), nullable=True),
    sa.Column('medium', sa.String(length=50), nullable=True),
    sa.Column('campaign_name', sa.String(length=255), nullable=True),
    sa.Column('audience_size', sa.Integer(), nullable=True),
    sa.Column('source_url', sa.Text(), nullable=True),
    sa.Column('schema_version', sa.String(length=20), nullable=False),
    sa.Column('document_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['corpus_id'], ['corpus.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_corpus_textid', 'document', ['corpus_id', 'text_id'], unique=False)
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)
    op.create_index(op.f('ix_document_text_id'), 'document', ['text_id'], unique=True)
    op.create_table('job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('corpus_id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=True),
    sa.Column('experiment_id', sa.Integer(), nullable=True),
    sa.Column('job_name', sa.String(length=255), nullable=True),
    sa.Column('text_ids', sa.JSON(), nullable=False),
    sa.Column('frameworks', sa.JSON(), nullable=False),
    sa.Column('models', sa.JSON(), nullable=False),
    sa.Column('run_count', sa.Integer(), nullable=True),
    sa.Column('prompt_template_config', sa.JSON(), nullable=True),
    sa.Column('scoring_algorithm', sa.String(length=50), nullable=True),
    sa.Column('analysis_mode', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('total_tasks', sa.Integer(), nullable=True),
    sa.Column('completed_tasks', sa.Integer(), nullable=True),
    sa.Column('failed_tasks', sa.Integer(), nullable=True),
    sa.Column('estimated_cost', sa.Float(), nullable=True),
    sa.Column('actual_cost', sa.Float(), nullable=True),
    sa.Column('job_config', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['corpus_id'], ['corpus.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_job_corpus_status', 'job', ['corpus_id', 'status'], unique=False)
    op.create_index(op.f('ix_job_id'), 'job', ['id'], unique=False)
    op.create_table('run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('experiment_id', sa.Integer(), nullable=False),
    sa.Column('run_number', sa.Integer(), nullable=False),
    sa.Column('text_id', sa.String(length=255), nullable=True),
    sa.Column('text_content', sa.Text(), nullable=False),
    sa.Column('input_length', sa.Integer(), nullable=False),
    sa.Column('llm_model', sa.String(length=100), nullable=False),
    sa.Column('llm_version', sa.String(length=50), nullable=True),
    sa.Column('prompt_template_version', sa.String(length=20), nullable=False),
    sa.Column('framework_version', sa.String(length=20), nullable=False),
    sa.Column('raw_scores', sa.JSON(), nullable=False),
    sa.Column('hierarchical_ranking', sa.JSON(), nullable=True),
    sa.Column('framework_fit_score', sa.Float(), nullable=True),
    sa.Column('well_justifications', sa.JSON(), nullable=True),
    sa.Column('narrative_elevation', sa.Float(), nullable=True),
    sa.Column('polarity', sa.Float(), nullable=True),
    sa.Column('coherence', sa.Float(), nullable=True),
    sa.Column('directional_purity', sa.Float(), nullable=True),
    sa.Column('narrative_position_x', sa.Float(), nullable=True),
    sa.Column('narrative_position_y', sa.Float(), nullable=True),
    sa.Column('execution_time', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('api_cost', sa.Float(), nullable=True),
    sa.Column('raw_prompt', sa.Text(), nullable=True),
    sa.Column('raw_response', sa.Text(), nullable=True),
    sa.Column('model_parameters', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('complete_provenance', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['experiment_id'], ['experiment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_run_id'), 'run', ['id'], unique=False)
    op.create_table('chunk',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('total_chunks', sa.Integer(), nullable=False),
    sa.Column('chunk_type', sa.String(length=20), nullable=False),
    sa.Column('chunk_size', sa.Integer(), nullable=False),
    sa.Column('chunk_overlap', sa.Integer(), nullable=True),
    sa.Column('document_position', sa.Float(), nullable=False),
    sa.Column('word_count', sa.Integer(), nullable=False),
    sa.Column('unique_words', sa.Integer(), nullable=False),
    sa.Column('word_density', sa.Float(), nullable=False),
    sa.Column('chunk_content', sa.Text(), nullable=False),
    sa.Column('framework_data', sa.JSON(), nullable=False),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chunk_document_chunkid', 'chunk', ['document_id', 'chunk_id'], unique=False)
    op.create_index(op.f('ix_chunk_id'), 'chunk', ['id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_id', sa.Integer(), nullable=False),
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('framework', sa.String(length=100), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=False),
    sa.Column('run_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('attempts', sa.Integer(), nullable=True),
    sa.Column('max_attempts', sa.Integer(), nullable=True),
    sa.Column('result_data', sa.JSON(), nullable=True),
    sa.Column('hierarchical_result', sa.JSON(), nullable=True),
    sa.Column('justifications', sa.JSON(), nullable=True),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('api_cost', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('finished_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['chunk_id'], ['chunk.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['job.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_chunk_framework', 'task', ['chunk_id', 'framework'], unique=False)
    op.create_index('idx_task_job_status', 'task', ['job_id', 'status'], unique=False)
    op.create_index(op.f('ix_task_id'), 'task', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_task_id'), table_name='task')
    op.drop_index('idx_task_job_status', table_name='task')
    op.drop_index('idx_task_chunk_framework', table_name='task')
    op.drop_table('task')
    op.drop_index(op.f('ix_chunk_id'), table_name='chunk')
    op.drop_index('idx_chunk_document_chunkid', table_name='chunk')
    op.drop_table('chunk')
    op.drop_index(op.f('ix_run_id'), table_name='run')
    op.drop_table('run')
    op.drop_index(op.f('ix_job_id'), table_name='job')
    op.drop_index('idx_job_corpus_status', table_name='job')
    op.drop_table('job')
    op.drop_index(op.f('ix_document_text_id'), table_name='document')
    op.drop_index(op.f('ix_document_id'), table_name='document')
    op.drop_index('idx_document_corpus_textid', table_name='document')
    op.drop_table('document')
    op.drop_table('component_compatibility')
    op.drop_table('weighting_methodologies')
    op.drop_table('prompt_templates')
    op.drop_table('framework_versions')
    op.drop_index(op.f('ix_experiment_id'), table_name='experiment')
    op.drop_table('experiment')
    op.drop_table('development_sessions')
    op.drop_index(op.f('ix_corpus_id'), table_name='corpus')
    op.drop_table('corpus')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
