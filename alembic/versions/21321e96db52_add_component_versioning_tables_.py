"""add_component_versioning_tables_priority1

Revision ID: 21321e96db52
Revises: 16e40975b2a0
Create Date: 2025-06-11 12:41:18.412446

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '21321e96db52'
down_revision: Union[str, None] = '16e40975b2a0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('development_sessions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('session_name', sa.String(length=255), nullable=False),
    sa.Column('component_type', sa.String(length=50), nullable=False),
    sa.Column('component_name', sa.String(length=100), nullable=False),
    sa.Column('hypothesis', sa.Text(), nullable=True),
    sa.Column('base_version', sa.String(length=20), nullable=True),
    sa.Column('target_version', sa.String(length=20), nullable=True),
    sa.Column('researcher', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('iteration_log', sa.JSON(), nullable=False),
    sa.Column('test_results', sa.JSON(), nullable=False),
    sa.Column('success_metrics', sa.JSON(), nullable=False),
    sa.Column('created_version_id', sa.String(length=36), nullable=True),
    sa.Column('lessons_learned', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['researcher'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('framework_versions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('framework_name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('dipoles_json', sa.JSON(), nullable=False),
    sa.Column('framework_json', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weights_json', sa.JSON(), nullable=False),
    sa.Column('weighting_rationale', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parent_version_id', sa.String(length=36), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('average_coherence', sa.Float(), nullable=True),
    sa.Column('framework_fit_average', sa.Float(), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('theoretical_foundation', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['framework_versions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('framework_name', 'version', name='_framework_name_version_uc')
    )
    op.create_table('prompt_templates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('template_content', sa.Text(), nullable=False),
    sa.Column('template_type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parent_version_id', sa.String(length=36), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('average_cost', sa.Float(), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['prompt_templates.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', name='_prompt_name_version_uc')
    )
    op.create_table('weighting_methodologies',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=False),
    sa.Column('algorithm_description', sa.Text(), nullable=False),
    sa.Column('mathematical_formula', sa.Text(), nullable=True),
    sa.Column('implementation_notes', sa.Text(), nullable=True),
    sa.Column('algorithm_type', sa.String(length=50), nullable=False),
    sa.Column('parameters_json', sa.JSON(), nullable=False),
    sa.Column('default_weights', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('parent_version_id', sa.String(length=36), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('average_polarity', sa.Float(), nullable=True),
    sa.Column('average_elevation', sa.Float(), nullable=True),
    sa.Column('stability_coefficient', sa.Float(), nullable=True),
    sa.Column('development_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('mathematical_validation', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['parent_version_id'], ['weighting_methodologies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version', name='_weighting_name_version_uc')
    )
    op.create_table('component_compatibility',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('prompt_template_id', sa.String(length=36), nullable=False),
    sa.Column('framework_id', sa.String(length=36), nullable=False),
    sa.Column('weighting_method_id', sa.String(length=36), nullable=False),
    sa.Column('compatibility_score', sa.Float(), nullable=True),
    sa.Column('validation_status', sa.String(length=20), nullable=True),
    sa.Column('average_coherence', sa.Float(), nullable=True),
    sa.Column('average_framework_fit', sa.Float(), nullable=True),
    sa.Column('cross_run_stability', sa.Float(), nullable=True),
    sa.Column('test_run_count', sa.Integer(), nullable=True),
    sa.Column('successful_runs', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('validated_at', sa.DateTime(), nullable=True),
    sa.Column('validated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['framework_id'], ['framework_versions.id'], ),
    sa.ForeignKeyConstraint(['prompt_template_id'], ['prompt_templates.id'], ),
    sa.ForeignKeyConstraint(['validated_by'], ['user.id'], ),
    sa.ForeignKeyConstraint(['weighting_method_id'], ['weighting_methodologies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('prompt_template_id', 'framework_id', 'weighting_method_id', name='_component_combination_uc')
    )
    
    # Update existing tables with new columns for component versioning
    op.add_column('job', sa.Column('experiment_id', sa.Integer(), nullable=True))
    op.add_column('job', sa.Column('prompt_template_config', sa.JSON(), nullable=True))
    op.add_column('job', sa.Column('scoring_algorithm', sa.String(length=50), nullable=True))
    op.add_column('job', sa.Column('analysis_mode', sa.String(length=50), nullable=True))
    op.create_foreign_key(None, 'job', 'experiment', ['experiment_id'], ['id'])
    
    # Update task table for hierarchical analysis results
    op.add_column('task', sa.Column('hierarchical_result', sa.JSON(), nullable=True))
    op.add_column('task', sa.Column('justifications', sa.JSON(), nullable=True))
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove new columns
    op.drop_column('task', 'justifications')
    op.drop_column('task', 'hierarchical_result')
    
    op.drop_constraint(None, 'job', type_='foreignkey')
    op.drop_column('job', 'analysis_mode')
    op.drop_column('job', 'scoring_algorithm')
    op.drop_column('job', 'prompt_template_config')
    op.drop_column('job', 'experiment_id')
    
    # Drop new tables
    op.drop_table('component_compatibility')
    op.drop_table('weighting_methodologies')
    op.drop_table('prompt_templates')
    op.drop_table('framework_versions')
    op.drop_table('development_sessions')
    # ### end Alembic commands ###
