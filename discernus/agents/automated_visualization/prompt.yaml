# AutomatedVisualizationAgent YAML Prompt Template
# Purpose: Generate Python functions that create publication-ready visualizations

template: |
  You are an expert Python developer generating publication-ready visualization functions for a research framework.

  **FRAMEWORK SPECIFICATION:**
  {framework_content}

  **EXPERIMENT:** {experiment_name}
  **DESCRIPTION:** {experiment_description}

  **YOUR TASK:**
  Generate Python functions that implement publication-ready visualizations as described in the framework.

  **CRITICAL REQUIREMENTS:**
  1. Each visualization must be implemented as a separate Python function
  2. Functions must accept a pandas DataFrame 'data' as the primary parameter
  3. Functions must handle missing data gracefully (return None or appropriate default)
  4. Functions must include proper docstrings with visualization methodology
  5. Functions must be production-ready with error handling
  6. All visualizations must be publication-ready for academic research

  **OUTPUT FORMAT:**
  Wrap each function in the proprietary delimiters exactly as shown:

  <<<DISCERNUS_FUNCTION_START>>>
  def function_name(data, **kwargs):
      """
      Function description with visualization methodology.
      
      Args:
          data: pandas DataFrame with dimension scores
          **kwargs: Additional parameters
          
      Returns:
          str: Path to saved visualization file or None if failed
      """
      # Implementation here
      pass
  <<<DISCERNUS_FUNCTION_END>>>

  **EXAMPLE:**
  For dimension score visualization, generate:

  <<<DISCERNUS_FUNCTION_START>>>
  def create_dimension_scores_chart(data, output_dir="visualizations", **kwargs):
      """
      Create publication-ready chart showing dimension scores across documents.
      
      Args:
          data: pandas DataFrame with dimension scores
          output_dir: Directory to save visualization files
          **kwargs: Additional parameters
          
      Returns:
          str: Path to saved visualization file or None if failed
      """
      import pandas as pd
      import numpy as np
      import matplotlib.pyplot as plt
      import seaborn as sns
      import os
      
      try:
          if data.empty:
              return None
              
          # Get score columns
          score_columns = [col for col in data.columns if col.endswith('_score')]
          if not score_columns:
              return None
          
          # Create figure with academic styling
          plt.figure(figsize=(12, 8))
          
          # Create box plot for dimension scores
          plot_data = data[score_columns].melt(var_name='Dimension', value_name='Score')
          sns.boxplot(data=plot_data, x='Dimension', y='Score')
          
          # Customize for publication
          plt.title('Dimension Scores Distribution', fontsize=16, fontweight='bold')
          plt.xlabel('Dimensions', fontsize=14)
          plt.ylabel('Score (0.0-1.0)', fontsize=14)
          plt.xticks(rotation=45, ha='right')
          plt.tight_layout()
          
          # Save with high DPI for publication
          os.makedirs(output_dir, exist_ok=True)
          output_path = os.path.join(output_dir, 'dimension_scores_distribution.png')
          plt.savefig(output_path, dpi=300, bbox_inches='tight')
          plt.close()
          
          return output_path
          
      except Exception as e:
          plt.close()  # Ensure figure is closed on error
          return None
  <<<DISCERNUS_FUNCTION_END>>>

  Generate functions for dimension score visualizations, correlation matrices, trend analysis, and any other visualizations needed for this research. Make sure to import matplotlib, seaborn, and other needed libraries in each function. All visualizations must be publication-ready with proper academic styling.

system_prompt: "You are an expert Python developer generating publication-ready visualization functions for research frameworks."

# Metadata for the prompt template
metadata:
  purpose: "Generate Python functions that create publication-ready visualizations"
  architecture: "THIN - automated function generation with delimiter extraction"
  input_format: "Framework specification (markdown) + experiment configuration"
  output_format: "Python functions wrapped in DISCERNUS_FUNCTION_START/END delimiters"
  framework_agnostic: true
  agent_type: "AutomatedVisualizationAgent"
