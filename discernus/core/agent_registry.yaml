agents:
  - name: AnalysisAgent
    archetype: Role-Playing
    module: "discernus.orchestration.ensemble_orchestrator"
    class: "AnalysisAgent" # Note: This is a conceptual class, its execution is handled inside the orchestrator
    execution_method: "_run_analysis_agent"
    description: "The primary workhorse agent. Applies a given framework to a single text document to produce a structured analysis."
    prompt_source: "dynamic (receives framework and instructions from orchestrator)"
    inputs:
      - framework_content: "The full text of the analytical framework."
      - text_content: "The content of the single document to be analyzed."
      - analysis_instructions: "Specific instructions for this analysis run."
    outputs:
      - analysis_results: "A list of structured JSON objects containing scores and evidence."

  - name: StatisticalInterpretationAgent
    archetype: Tool-Using
    module: "discernus.agents.statistical_interpretation_agent"
    class: "StatisticalInterpretationAgent"
    execution_method: "interpret_statistical_results"
    description: "Translates raw JSON statistical output into a human-readable, qualitative interpretation suitable for an academic publication."
    prompt_source: "self-contained"
    inputs:
      - stats_file_path: "path to the raw statistical_analysis_results.json"
      - report_file_path: "path to the main report file for context"
    outputs:
      - interpretation_text: "A formatted markdown string containing the full interpretation."

  - name: ExperimentConclusionAgent
    archetype: Tool-Using
    module: "discernus.agents.experiment_conclusion_agent"
    class: "ExperimentConclusionAgent"
    execution_method: "generate_final_audit" # This generates the audit, a subsequent step would append it
    description: "Performs a final, holistic audit of all experiment artifacts (plan, framework, report, stats, logs) to write a concluding 'Methodological Audit' section."
    prompt_source: "self-contained"
    inputs:
      - project_path: "Path to the root of the experiment project."
      - report_file_path: "Path to the final report."
      - stats_file_path: "Path to the statistical results."
    outputs:
      - audit_text: "A markdown string containing the final methodological audit."

  - name: MethodologicalOverwatchAgent
    archetype: Tool-Using
    module: "discernus.agents.methodological_overwatch_agent"
    class: "MethodologicalOverwatchAgent"
    execution_method: "review_analysis_results"
    description: "Acts as a mid-flight quality control check, reviewing initial analysis results to decide if an experiment is methodologically sound enough to continue."
    prompt_source: "self-contained"
    inputs:
      - analysis_results: "A list of initial analysis result objects."
    outputs:
      - decision_json: "A JSON object with a 'decision' (PROCEED/TERMINATE) and a 'reason'."

  # Agents below are part of the initial validation phase, not typically part of the post-analysis workflow
  - name: ValidationAgent
    archetype: Hybrid
    module: "discernus.agents.validation_agent"
    class: "ValidationAgent"
    execution_method: "validate_project"
    description: "Orchestrates pre-execution validation of an experiment's framework, experiment definition, and corpus. Uses LLM-driven checks for coherence and readiness."
    prompt_source: "self-contained"
    inputs:
      - project_path: "path to the project directory"
    outputs:
      - validation_result: "A JSON object summarizing the validation outcome, including readiness for execution."

  - name: EnsembleConfigurationAgent
    archetype: Tool-Using
    module: "discernus.agents.ensemble_configuration_agent"
    class: "EnsembleConfigurationAgent"
    execution_method: "assess_model_health"
    description: "Assesses the health of models specified in an experiment and provides intelligent recommendations (proceed, substitute, cancel)."
    prompt_source: "self-contained"
    inputs:
      - model_names: "A list of model identifiers to be checked."
    outputs:
      - health_assessment: "A JSON object detailing the health of each model and a recommended course of action."

  - name: StatisticalAnalysisConfigurationAgent
    archetype: Tool-Using
    module: "discernus.agents.statistical_analysis_configuration_agent"
    class: "StatisticalAnalysisConfigurationAgent"
    execution_method: "generate_statistical_plan"
    description: "Reads an experiment.md file and generates a structured statistical analysis plan."
    prompt_source: "self-contained"
    inputs:
      - experiment_path: "path to experiment.md"
    outputs:
      - statistical_plan: "A JSON object outlining the required statistical tests and parameters."

  - name: ExecutionPlannerAgent
    archetype: Tool-Using
    module: "discernus.agents.execution_planner_agent"
    class: "ExecutionPlannerAgent"
    execution_method: "create_execution_plan"
    description: "Generates a detailed execution plan, including API call counts, cost estimates, and time estimates."
    prompt_source: "self-contained"
    inputs:
      - corpus_files: "List of files in the corpus."
      - model_names: "List of models to be used."
      - framework_text: "The full text of the framework."
      - analysis_instructions: "The instructions for the analysis agents."
    outputs:
      - execution_plan: "A JSON object detailing the estimated cost, time, and steps for the experiment." 